name: Build N1 IMG

on:
  workflow_dispatch:
    inputs:
      days:
        description: 'Number of days.'
        required: true
        default: 30
      minimum_runs:
        description: 'The minimum runs to keep for each workflow.'
        required: true
        default: 3
      
env:
  RELEASE: false
  FLIPPY_VERSION: 57
 
jobs:
  build:
    runs-on: ubuntu-20.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        ref: 57
        
    - name: Initialization environment
      run: |     
        version=$(curl -s "https://api.github.com/repos/mingxiaoyu/N1Openwrt/releases/latest" | awk -F '"' '/tag_name/{print $4}')
        
        echo "version=$version"  >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")"  >> $GITHUB_ENV
        
        sudo chmod  -R 777 /opt
        cp -r opt/* /opt
        
        test -d /opt/dl || mkdir -p /opt/dl
        sudo chmod  -R 777 /opt/dl
        
        cd /opt
        mkdir imgs  
            
    - name: Download
      run: |
        cd /opt/dl
        
        wget  https://github.com/mingxiaoyu/N1Openwrt/releases/download/$version/openwrt-armvirt-64-default-rootfs.tar.gz 
        wget https://github.com/mingxiaoyu/armbian_flippy/releases/download/v${FLIPPY_VERSION}/kernel.tar.gz
        
    - name: Check Files
      run: |
        cd /opt/dl
        ls
                
    - name: Install the package
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install xz-utils btrfs-progs gawk zip unzip curl dosfstools  uuid-runtime
        sudo -E apt-get -qq install git  git-core
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Copy files
      run: |
        cp /opt/dl/openwrt-armvirt-64-default-rootfs.tar.gz /opt/openwrt/openwrt-armvirt-64-default-rootfs.tar.gz
        cp /opt/dl/kernel.tar.gz /opt/kernel.tar.gz
       
    - name: tar kernel
      run: |
        cd /opt
        sudo tar xvzf kernel.tar.gz  
       
        cd /opt/kernel
        ls
        
    - name: build img
      run: |        
 
        sudo chmod  -R 777 /opt
        cd /opt/openwrt
             
        sudo chmod +x mk_s905d_n1.sh
        sudo ./mk_s905d_n1.sh 
        	
    - name: xz-z
      id: xz
      run: |
        sudo chmod  -R 777 /opt
        cd /opt/openwrt/tmp 
        xz -z $RELEASE_NAME
        
        ls
        echo "::set-output name=status::success"

#    - name: build Personal N1(我个人用的旁路由配置)
#      run: |
#        [ -e openwrtfiles ] && mv openwrtfiles /opt/openwrt/files/openwrtfiles
#        cd /opt/openwrt
#        sed -i 's/N1_55_Openwrt.img/N1_MXY_Openwrt.img/g' mk_n1_opimg.sh
#        ./mk_n1_opimg.sh
#        cd /opt/openwrt/tmp 
#       xz -z N1_MXY_Openwrt.img

    - name: Create release
      if: steps.xz.outputs.status == 'success'  &&  env.RELEASE == 'true' && !cancelled()
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.DATE }} / N1-Openwrt-img | 编译
        allowUpdates: true
        tag: ${{ env.version }}
        commit: main
        token: ${{ secrets.GITHUB_TOKEN   }}
        body: |
          默认IP：192.168.31.2 默认密码： password
          57+o 全新刷入emmc方法：
             1. 固件刷入U盘。
             2. cd root
             3. ./install-to-emmc.sh
             4. 拔掉U盘，断电重启。
             
          57+o 在线升级方法：
             1. 上传 img 到/mnt/mmcblk2p4
             2. cd /mnt/mmcblk2p4
             3. 升级脚本下载 https://raw.githubusercontent.com/mingxiaoyu/N1imagebuilder/main/55/opt/openwrt/files/update-amlogic-openwrt.sh
             4. chmod +x update-amlogic-openwrt.sh
             5. ./update-amlogic-openwrt.sh N1_55_Openwrt.img

        artifacts: "/opt/openwrt/tmp/*.xz"
                
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
          repository: ${{ github.repository }}
          retain_days: ${{ github.event.inputs.days }}
          keep_minimum_runs: ${{ github.event.inputs.minimum_runs }}

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
